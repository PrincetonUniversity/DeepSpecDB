@inproceedings{Iris-weak,
  author    = {Jan{-}Oliver Kaiser and
               Hoang{-}Hai Dang and
               Derek Dreyer and
               Ori Lahav and
               Viktor Vafeiadis},
  title     = {Strong Logic for Weak Memory: Reasoning About Release-Acquire Consistency
               in {Iris}},
  booktitle = {ECOOP'17: 31st European Conference on Object-Oriented Programming},
  series    = {LIPIcs},
  volume    = {74},
  pages     = {17:1--17:29},
  year      = {2017},
}
                  
@inproceedings{TaDA,
  author    = {Pedro {da Rocha Pinto} and
               Thomas Dinsdale{-}Young and
               Philippa Gardner},
  editor    = {Richard Jones},
  title     = {{TaDA}: A Logic for Time and Data Abstraction},
  booktitle = {ECOOP'14: 28th European Conference on Object-Oriented Programming},
  series    = {LNCS},
  volume    = {8586},
  pages     = {207--231},
  publisher = {Springer},
  year      = {2014},
  doi       = {10.1007/978-3-662-44202-9_9},
}
                  
@inproceedings{Views,
  author    = {Thomas Dinsdale{-}Young and
               Lars Birkedal and
               Philippa Gardner and
               Matthew J. Parkinson and
               Hongseok Yang},
  editor    = {Roberto Giacobazzi and
               Radhia Cousot},
  title     = {Views: compositional reasoning for concurrent programs},
  booktitle = {The 40th Annual {ACM} {SIGPLAN-SIGACT} Symposium on Principles of
               Programming Languages, {POPL} '13, Rome, Italy - January 23 - 25,
               2013},
  pages     = {287--300},
  publisher = {{ACM}},
  year      = {2013},
  url       = {http://doi.acm.org/10.1145/2429069.2429104},
  doi       = {10.1145/2429069.2429104},
  timestamp = {Fri, 18 Jan 2013 17:57:12 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/popl/Dinsdale-YoungBGPY13},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{CAP,
  author    = {Thomas Dinsdale{-}Young and
               Mike Dodds and
               Philippa Gardner and
               Matthew J. Parkinson and
               Viktor Vafeiadis},
  editor    = {Theo D'Hondt},
  title     = {Concurrent Abstract Predicates},
  booktitle = {{ECOOP} 2010 - Object-Oriented Programming, 24th European Conference,
               Maribor, Slovenia, June 21-25, 2010. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {6183},
  pages     = {504--528},
  publisher = {Springer},
  year      = {2010},
  url       = {http://dx.doi.org/10.1007/978-3-642-14107-2_24},
  doi       = {10.1007/978-3-642-14107-2_24},
  timestamp = {Thu, 01 Jul 2010 07:21:55 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/ecoop/Dinsdale-YoungDGPV10},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{DBLP:journals/entcs/Vafeiadis11,
  author    = {Viktor Vafeiadis},
  title     = {Concurrent Separation Logic and Operational Semantics},
  journal   = {Electr. Notes Theor. Comput. Sci.},
  volume    = {276},
  pages     = {335--351},
  year      = {2011},
  url       = {http://dx.doi.org/10.1016/j.entcs.2011.09.029},
  doi       = {10.1016/j.entcs.2011.09.029},
  timestamp = {Mon, 14 Nov 2011 15:35:16 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/entcs/Vafeiadis11},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{RSL,
  author    = {Viktor Vafeiadis and
               Chinmay Narayan},
  editor    = {Antony L. Hosking and
               Patrick Th. Eugster and
               Cristina V. Lopes},
  title     = {Relaxed separation logic: a program logic for {C11} concurrency},
  booktitle = {Proceedings of the 2013 {ACM} {SIGPLAN} International Conference on
               Object Oriented Programming Systems Languages {\&} Applications ({OOPSLA} 2013)},
  pages     = {867--884},
  publisher = {{ACM}},
  year      = {2013},
  url       = {http://doi.acm.org/10.1145/2509136.2509532},
  doi       = {10.1145/2509136.2509532},
  timestamp = {Fri, 25 Oct 2013 08:46:39 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/oopsla/VafeiadisN13},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Parkinson-stack,
 author = {Parkinson, Matthew and Bornat, Richard and O'Hearn, Peter},
 title = {Modular Verification of a Non-blocking Stack},
 booktitle = {Proceedings of the 34th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '07},
 year = {2007},
 isbn = {1-59593-575-4},
 location = {Nice, France},
 pages = {297--302},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/1190216.1190261},
 doi = {10.1145/1190216.1190261},
 acmid = {1190261},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrency, non-blocking, separation logic},
} 

@article{CSL,
 author = {OHearn, Peter W.},
 title = {Resources, Concurrency, and Local Reasoning},
 journal = {Theor. Comput. Sci.},
 issue_date = {April, 2007},
 volume = {375},
 number = {1-3},
 month = apr,
 year = {2007},
 issn = {0304-3975},
 pages = {271--307},
 numpages = {37},
 url = {http://dx.doi.org/10.1016/j.tcs.2006.12.035},
 doi = {10.1016/j.tcs.2006.12.035},
 acmid = {1236121},
 publisher = {Elsevier Science Publishers Ltd.},
 address = {Essex, UK},
 keywords = {Concurrency, Logics of programs, Separation logic},
} 

@inproceedings{VST,
 author = {Appel, Andrew W.},
 title = {Verified Software Toolchain},
 booktitle = {Proceedings of the 20th European Conference on Programming Languages and Systems: Part of the Joint European Conferences on Theory and Practice of Software},
 series = {ESOP'11/ETAPS'11},
 year = {2011},
 isbn = {978-3-642-19717-8},
 location = {Saarbr\&\#252;cken, Germany},
 pages = {1--17},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=1987211.1987212},
 acmid = {1987212},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{hobor-CSL,
  author    = {Aquinas Hobor and
               Andrew W. Appel and
               Francesco Zappa Nardelli},
  editor    = {Sophia Drossopoulou},
  title     = {Oracle Semantics for Concurrent Separation Logic},
  booktitle = {Proceedings of the 17th European Symposium on Programming ({ESOP} 2008)},
  series    = {Lecture Notes in Computer Science},
  volume    = {4960},
  pages     = {353--367},
  publisher = {Springer},
  year      = {2008},
  url       = {http://dx.doi.org/10.1007/978-3-540-78739-6_27},
  doi       = {10.1007/978-3-540-78739-6_27},
  timestamp = {Thu, 28 May 2015 17:23:23 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/esop/HoborAN08},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{IRIS,
 author = {Jung, Ralf and Krebbers, Robbert and Birkedal, Lars and Dreyer, Derek},
 title = {Higher-order Ghost State},
 booktitle = {Proceedings of the 21st ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP 2016},
 year = {2016},
 isbn = {978-1-4503-4219-3},
 location = {Nara, Japan},
 pages = {256--269},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2951913.2951943},
 doi = {10.1145/2951913.2951943},
 acmid = {2951943},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Separation logic, compositional verification, fine-grained concurrency, higher- order logic, interactive theorem proving},
} 

@article{reader-writer,
 author = {Courtois, P. J. and Heymans, F. and Parnas, D. L.},
 title = {Concurrent Control with ``Readers'' and ``Writers''},
 journal = {Commun. ACM},
 issue_date = {Oct. 1971},
 volume = {14},
 number = {10},
 month = oct,
 year = {1971},
 issn = {0001-0782},
 pages = {667--668},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/362759.362813},
 doi = {10.1145/362759.362813},
 acmid = {362813},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {critical section, mutual exclusion, shared access to resources},
} 

@inproceedings{VerCors-hist,
  author    = {Stefan Blom and
               Marieke Huisman and
               Marina Zaharieva{-}Stojanovski},
  editor    = {Radu Calinescu and
               Bernhard Rumpe},
  title     = {History-Based Verification of Functional Behaviour of Concurrent Programs},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering and Formal Methods ({SEFM} 2015)},
  series    = {Lecture Notes in Computer Science},
  volume    = {9276},
  pages     = {84--98},
  publisher = {Springer},
  year      = {2015},
  url       = {http://dx.doi.org/10.1007/978-3-319-22969-0_6},
  doi       = {10.1007/978-3-319-22969-0_6},
  timestamp = {Mon, 24 Aug 2015 16:30:30 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sefm/BlomHZ15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{FCSL-hist,
  author    = {Ilya Sergey and
               Aleksandar Nanevski and
               Anindya Banerjee},
  editor    = {Jan Vitek},
  title     = {Specifying and Verifying Concurrent Algorithms with Histories and
               Subjectivity},
  booktitle = {Proceedings of the 24th European Symposium on Programming ({ESOP} 2015)},
  series    = {Lecture Notes in Computer Science},
  volume    = {9032},
  pages     = {333--358},
  publisher = {Springer},
  year      = {2015},
  url       = {http://dx.doi.org/10.1007/978-3-662-46669-8_14},
  doi       = {10.1007/978-3-662-46669-8_14},
  timestamp = {Tue, 07 Apr 2015 15:19:02 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/esop/SergeyNB15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{GPS-RCU,
 author = {Tassarotti, Joseph and Dreyer, Derek and Vafeiadis, Viktor},
 title = {Verifying Read-copy-update in a Logic for Weak Memory},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {110--120},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2737924.2737992},
 doi = {10.1145/2737924.2737992},
 acmid = {2737992},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {C/C++, Concurrency, Program logic, RCU, Separation logic, Weak memory models},
} 

@inproceedings{seL4,
 author = {Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and Andronick, June and Cock, David and Derrin, Philip and Elkaduwe, Dhammika and Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael and Sewell, Thomas and Tuch, Harvey and Winwood, Simon},
 title = {seL4: Formal Verification of an OS Kernel},
 booktitle = {Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems Principles},
 series = {SOSP '09},
 year = {2009},
 isbn = {978-1-60558-752-3},
 location = {Big Sky, Montana, USA},
 pages = {207--220},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1629575.1629596},
 doi = {10.1145/1629575.1629596},
 acmid = {1629596},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {isabelle/hol, l4, microkernel, sel4},
}

@book{vst-book,
 author = {Appel, Andrew W. and Dockins, Robert and Hobor, Aquinas and Beringer, Lennart and Dodds, Josiah and Stewart, Gordon and Blazy, Sandrine and Leroy, Xavier},
 title = {Program Logics for Certified Compilers},
 year = {2014},
 isbn = {110704801X, 9781107048010},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@inproceedings{RCU,
    address = {Las Vegas, NV},
    author = {McKenney, Paul E. and Slingwine, John D.},
    booktitle = {{Parallel and Distributed Computing and Systems}},
    citeulike-article-id = {402420},
    keywords = {logsync, rcu},
    month = oct,
    pages = {509--518},
    posted-at = {2005-11-21 08:41:47},
    priority = {2},
    title = {{Read-Copy Update: Using Execution History to Solve Concurrency Problems}},
    year = {1998}
}

@misc{TB,
  url={https://wiki.sei.cmu.edu/aadl/images/f/f6/SMACCM-TA4-whalen-42013.pdf},
  author = {Darren Cofer and Michael Whalen},
  year = 2013
}

@unpublished{promela-RCU
,Author="Paul E. McKenney"
,Title="Using {Promela} and {Spin} to verify parallel algorithms"
,month="August"
,day="1"
,year="2007"
,note="Available:
\url{http://lwn.net/Articles/243851/}"
,annotation="
	LWN article describing Promela and spin, and also using Oleg
	Nesterov's QRCU as an example (with Paul McKenney's fastpath).
	Merged patch at: http://lkml.org/lkml/2007/2/25/18
"
}

@ARTICLE{promela,
    author = {Gerard J. Holzmann},
    title = {Design and Validation of Protocols},
    journal = {Tutorial Computer Networks and ISDN Systems},
    year = {1990},
    volume = {25},
    pages = {981--1017}
}

@inproceedings{FSL++,
  author    = {Marko Doko and
               Viktor Vafeiadis},
  editor    = {Hongseok Yang},
  title     = {Tackling Real-Life Relaxed Concurrency with {FSL++}},
  booktitle = {Proceedings of the 26th European Symposium on Programming ({ESOP} 2017)},
  series    = {Lecture Notes in Computer Science},
  volume    = {10201},
  pages     = {448--475},
  year      = {2017},
  url       = {http://dx.doi.org/10.1007/978-3-662-54434-1_17},
  doi       = {10.1007/978-3-662-54434-1_17},
  timestamp = {Mon, 10 Apr 2017 15:05:32 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/esop/DokoV17},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@Article{Owicki1976,
author="Owicki, Susan
and Gries, David",
title="An axiomatic proof technique for parallel programs I",
journal="Acta Informatica",
year="1976",
volume="6",
number="4",
pages="319--340",
abstract="A language for parallel programming, with a primitive construct for synchronization and mutual exclusion, is presented. Hoare's deductive system for proving partial correctness of sequential programs is extended to include the parallelism described by the language. The proof method lends insight into how one should understand and present parallel programs. Examples are given using several of the standard problems in the literature. Methods for proving termination and the absence of deadlock are also given.",
issn="1432-0525",
doi="10.1007/BF00268134",
url="http://dx.doi.org/10.1007/BF00268134"
}

@conference {ROS,
	title = {ROS: an open-source Robot Operating System},
	booktitle = {ICRA Workshop on Open Source Software},
	year = {2009},
	attachments = {http://www.willowgarage.com/sites/default/files/icraoss09-ROS.pdf},
	author = {Morgan Quigley and Ken Conley and Brian P. Gerkey and Josh Faust and Tully Foote and Jeremy Leibs and Rob Wheeler and Andrew Y. Ng}
}

@article{compcert,
  author = {Xavier Leroy},
  title = {Formal verification of a realistic compiler},
  journal = {Communications of the ACM},
  year = 2009,
  volume = 52,
  number = 7,
  pages = {107--115},
  url = {http://gallium.inria.fr/~xleroy/publi/compcert-CACM.pdf},
  urlpublisher = {http://doi.acm.org/10.1145/1538788.1538814},
  hal = {http://hal.archives-ouvertes.fr/inria-00415861/},
  pubkind = {journal-int-mono},
  abstract = {This paper reports on the development and formal verification (proof
of semantic preservation) of CompCert, a compiler from Clight (a
large subset of the C programming language) to PowerPC assembly code,
using the Coq proof assistant both for programming the compiler and
for proving its correctness.  Such a verified compiler is useful in
the context of critical software and its formal verification: the
verification of the compiler guarantees that the safety properties
proved on the source code hold for the executable compiled code as
well.}
}

@inproceedings{GPS,
 author = {Turon, Aaron and Vafeiadis, Viktor and Dreyer, Derek},
 title = {GPS: Navigating Weak Memory with Ghosts, Protocols, and Separation},
 booktitle = {Proceedings of the 2014 ACM International Conference on Object Oriented Programming Systems Languages \& Applications},
 series = {OOPSLA '14},
 year = {2014},
 isbn = {978-1-4503-2585-1},
 location = {Portland, Oregon, USA},
 pages = {691--707},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/2660193.2660243},
 doi = {10.1145/2660193.2660243},
 acmid = {2660243},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {c/c++, concurrency, program logic, separation logic, weak memory models},
} 

@inproceedings{Masstree,
 author = {Mao, Yandong and Kohler, Eddie and Morris, Robert Tappan},
 title = {Cache Craftiness for Fast Multicore Key-value Storage},
 booktitle = {Proceedings of the 7th ACM European Conference on Computer Systems},
 series = {EuroSys '12},
 year = {2012},
 isbn = {978-1-4503-1223-3},
 location = {Bern, Switzerland},
 pages = {183--196},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2168836.2168855},
 doi = {10.1145/2168836.2168855},
 acmid = {2168855},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {in-memory, key-value, multicore, persistent},
} 

@Inbook{lin-contextual,
author="Filipovi{\'{c}}, Ivana
and O'Hearn, Peter
and Rinetzky, Noam
and Yang, Hongseok",
editor="Castagna, Giuseppe",
title="Abstraction for Concurrent Objects",
bookTitle="Programming Languages and Systems: 18th European Symposium on Programming, ESOP 2009, Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2009, York, UK, March 22-29, 2009. Proceedings",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="252--266",
abstract="Concurrent data structures are usually designed to satisfy correctness conditions such as sequential consistency and linearizability. In this paper, we consider the following fundamental question: what guarantees are provided by these conditions for client programs? We formally show that these conditions can be characterized in terms of observational refinement. Our study also provides a new understanding of sequential consistency and linearizability in terms of abstraction of dependency between computation steps of client programs.",
isbn="978-3-642-00590-9",
doi="10.1007/978-3-642-00590-9_19",
url="http://dx.doi.org/10.1007/978-3-642-00590-9_19"
}


@misc{hashtable, title={The World's Simplest Lock-Free Hash Table}, url={http://preshing.com/20130605/the-worlds-simplest-lock-free-hash-table/}, journal={Preshing on Programming}, author={Preshing, Jeff}, year={2013}, month={Jun}}


@inproceedings{TSOlin,
 author = {Burckhardt, Sebastian and Gotsman, Alexey and Musuvathi, Madanlal and Yang, Hongseok},
 title = {Concurrent Library Correctness on the TSO Memory Model},
 booktitle = {Proceedings of the 21st European Conference on Programming Languages and Systems},
 series = {ESOP'12},
 year = {2012},
 isbn = {978-3-642-28868-5},
 location = {Tallinn, Estonia},
 pages = {87--107},
 numpages = {21},
 url = {http://dx.doi.org/10.1007/978-3-642-28869-2_5},
 doi = {10.1007/978-3-642-28869-2_5},
 acmid = {2259253},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@Inbook{TaDA-maps,
author="Xiong, Shale
and Pinto, Pedro da Rocha
and Ntzik, Gian
and Gardner, Philippa",
editor="Yang, Hongseok",
title="Abstract Specifications for Concurrent Maps",
bookTitle="Programming Languages and Systems: 26th European Symposium on Programming, ESOP 2017, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2017, Uppsala, Sweden, April 22--29, 2017, Proceedings",
year="2017",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="964--990",
abstract="Despite recent advances in reasoning about concurrent data structure libraries, the largest implementations in java.util.concurrent have yet to be verified. The key issue lies in the development of modular specifications, which provide clear logical boundaries between clients and implementations. A solution is to use recent advances in fine-grained concurrency reasoning, in particular the introduction of abstract atomicity to concurrent separation logic reasoning. We present two specifications of concurrent maps, both providing the clear boundaries we seek. We show that these specifications are equivalent, in that they can be built from each other. We show how we can verify client programs, such as a concurrent set and a producer-consumer client. We also give a substantial first proof that the main operations of ConcurrentSkipListMap in java.util.concurrent satisfy the map specification. This work demonstrates that we now have the technology to verify the largest implementations in java.util.concurrent.",
isbn="978-3-662-54434-1",
doi="10.1007/978-3-662-54434-1_36",
url="http://dx.doi.org/10.1007/978-3-662-54434-1_36"
}

@MastersThesis{Iris-hashtable,
    author     =     {Esben Glavind Clausen},
    title     =     {{Verifying Hash tables in Iris}},
    school     =     {Aarhus University},
    address     =     {Denmark},
    month = 6,
    year     =     {2017},
    }

@article{linearizability,
 author = {Herlihy, Maurice P. and Wing, Jeannette M.},
 title = {Linearizability: A Correctness Condition for Concurrent Objects},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {July 1990},
 volume = {12},
 number = {3},
 month = jul,
 year = {1990},
 issn = {0164-0925},
 pages = {463--492},
 numpages = {30},
 url = {http://doi.acm.org/10.1145/78969.78972},
 doi = {10.1145/78969.78972},
 acmid = {78972},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{RGSep,
 author = {Vafeiadis, Viktor and Parkinson, Matthew},
 title = {A Marriage of Rely/Guarantee and Separation Logic},
 booktitle = {Proceedings of the 18th International Conference on Concurrency Theory},
 series = {CONCUR'07},
 year = {2007},
 isbn = {3-540-74406-1, 978-3-540-74406-1},
 location = {Lisbon, Portugal},
 pages = {256--271},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=2392200.2392220},
 acmid = {2392220},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{batty-c11,
  optauthor = {M. Batty and S. Owens and S. Sarkar and P. Sewell and T. Weber},
  author = {Mark Batty and Scott Owens and Susmit Sarkar and Peter Sewell and Tjark Weber},
  title = {Mathematizing {C++} Concurrency},
  optcrossref = {},
  optkey = {},
  conf = {POPL 2011},
  booktitle = {Proceedings of  the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  optbooktitle = {Proc.~POPL},
  pages = {55--66},
  numpages = {12},
  doi = {10.1145/1926385.1926394},
  optpages = {},
  year = {2011},
  opteditor = {},
  optvolume = {},
  optnumber = {},
  optseries = {},
  optaddress = {},
  optmonth = {},
  optorganization = {},
  optpublisher = {},
  optnote = {},
  optannote = {},
  pdf = {http://www.cl.cam.ac.uk/~pes20/cpp/popl085ap-sewell.pdf},
  abstract = {Shared-memory concurrency in C and C++ is pervasive in systems programming, but has long been poorly defined. This motivated an ongoing shared effort by the standards committees to specify concurrent behaviour in the next versions of both languages. They aim to provide strong guarantees for race-free programs, together with new (but subtle) relaxed-memory atomic primitives for high-performance concurrent code. However, the current draft standards, while the result of careful deliberation, are not yet clear and rigorous definitions, and harbour substantial problems in their details.

In this paper we establish a mathematical (yet readable) semantics for C++ concurrency. We aim to capture the intent of the current (`Final Committee') Draft as closely as possible, but discuss changes that fix many of its problems. We prove that a proposed x86 implementation of the concurrency primitives is correct with respect to the x86-TSO model, and describe our Cppmem tool for exploring the semantics of examples, using code generated from our Isabelle/HOL definitions.

Having already motivated changes to the draft standard, this work will aid discussion of any further changes, provide a correctness condition for compilers, and give a much-needed basis for analysis and verification of concurrent C and C++ programs.},
  topic = {c11}
}

@inproceedings{masstree2,
 author = {Tu, Stephen and Zheng, Wenting and Kohler, Eddie and Liskov, Barbara and Madden, Samuel},
 title = {Speedy Transactions in Multicore In-memory Databases},
 booktitle = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
 series = {SOSP '13},
 year = {2013},
 isbn = {978-1-4503-2388-8},
 location = {Farminton, Pennsylvania},
 pages = {18--32},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/2517349.2522713},
 doi = {10.1145/2517349.2522713},
 acmid = {2522713},
 publisher = {ACM},
 address = {New York, NY, USA},
} 