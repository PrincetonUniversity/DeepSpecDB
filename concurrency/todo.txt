look for commonalities between lock-free and lock-based proofs (Lennart?)

refactor specifications so they are as much "the same" as possible, providing an interface of "local pred and public pred" (Lennart?)

refactor proof explanation to emphasize two-part structure (proofs about C code vs. "extract lemmas" about ghost state manipulation)

prove a simple client to demonstrate that the implementations are interchangeable (Anastasiia)

write up client proof (William, Anastasiia)

rewrite the intro to emphasize the proof technique (Shengyi? William?)

simple example of the fine-grained-locking+logical atomicity technique, for illustration in 3.1 (Shengyi, Alex?)

rewrite 3.2.1, describe lock invariant for BST (William)


For later:

flow interface version

new lock-free version
